/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estruturadidaticos.interfaces;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author vivi_
 */
public class LSE extends javax.swing.JFrame {
    String n_insere;
    String posicao_insere;
    String n_remove;
    String procura;
    String busca_indice;
    public ArrayList<JLabel> lista; //array dos label
    public int posInicial;
    public int posInicial2;
    public ArrayList<Integer> lista2; //array dos elementos 
    int tamArray = 0;
    int pegaNum;
    public ArrayList<Integer> lista3; // aray dos indices
    int numero_bscind;
    
    /**
     * Creates new form LSE
     */
    public LSE() {
        initComponents();
        lista = new ArrayList<>();
        posInicial = 20;
        posInicial2 = 20;
        lista2 = new ArrayList<>();
        lista3 = new ArrayList<>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        JanelaPrincipal1 = new javax.swing.JMenuItem();
        Reiniciar = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        Inserir1 = new javax.swing.JMenuItem();
        Remover = new javax.swing.JMenuItem();
        Find = new javax.swing.JMenuItem();
        buscaIndex = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu2.setText("Menu");

        JanelaPrincipal1.setText("Janela Principal");
        JanelaPrincipal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JanelaPrincipal1ActionPerformed(evt);
            }
        });
        jMenu2.add(JanelaPrincipal1);

        Reiniciar.setText("Reiniciar");
        Reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReiniciarActionPerformed(evt);
            }
        });
        jMenu2.add(Reiniciar);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Funções");

        Inserir1.setText("Inserir");
        Inserir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inserir1ActionPerformed(evt);
            }
        });
        jMenu5.add(Inserir1);

        Remover.setText("Remover");
        Remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverActionPerformed(evt);
            }
        });
        jMenu5.add(Remover);

        Find.setText("Busca por elemento");
        Find.setToolTipText("");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });
        jMenu5.add(Find);

        buscaIndex.setText("Busca por Index");
        buscaIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaIndexActionPerformed(evt);
            }
        });
        jMenu5.add(buscaIndex);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 664, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JanelaPrincipal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JanelaPrincipal1ActionPerformed
        GUI framegui = new GUI();
        framegui.setVisible(true);
        framegui.setTitle("Simulador Gráfico de Estruturas de dados");
        framegui.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_JanelaPrincipal1ActionPerformed

    private void ReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReiniciarActionPerformed
        LSE lseframe = new LSE();
        lseframe.setVisible(true);
        lseframe.setTitle("Listas Sequenciais");
        dispose();
    }//GEN-LAST:event_ReiniciarActionPerformed

    private void Inserir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inserir1ActionPerformed
            
            // insere elemento e verifica se eh null
            n_insere = JOptionPane.showInputDialog("Insira um elemento.");
            

            if(!isNumber(n_insere) ) {
                 JOptionPane.showMessageDialog(null, "Numero inválido");
            }else{
                 posicao_insere = JOptionPane.showInputDialog("Insira a posição.");

                 if(!isNumber(posicao_insere)) {
                     JOptionPane.showMessageDialog(null, "Posição inválida");
                 }  
                 //verificacao que impede de digitar um indice aleatoriamente sem ordem
                 int pos = Integer.parseInt(posicao_insere);
                 int s = Integer.parseInt(n_insere);
                 if(Integer.parseInt(posicao_insere) == tamArray) {
                    lista3.add(0);
                    lista3.add(tamArray);
                    lista2.add(s);
                    adicionaLabelFinal();
                    tamArray++;
                 }else if(Integer.parseInt(posicao_insere) < tamArray){
                    lista2.add(pos, s);
                    lista3.add(0);
                    lista3.add(tamArray);
                    adicionaLabel();
                    tamArray++;
                 }else{
                    JOptionPane.showMessageDialog(null, "Posição inválida");
                 }
    

            
        }
 
    }//GEN-LAST:event_Inserir1ActionPerformed

    private void RemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverActionPerformed
        if(lista2.isEmpty()){
            JOptionPane.showMessageDialog(null, "Lista vazia");
        }else{
            n_remove = JOptionPane.showInputDialog("Insira o índice a ser removido");

            if(!isNumber(n_remove)) {
                JOptionPane.showMessageDialog(null, "Posição inválida");

            }
            int i = Integer.parseInt(n_remove);
            if(i > lista.size()-1) {
                JOptionPane.showMessageDialog(null, "Voce digitou um índice maior que o esperado");
                return;
            }
            removerIndice(Integer.parseInt(n_remove));
            tamArray--;
            int s = Integer.parseInt(n_remove);
            lista2.remove(s);
        }
    }//GEN-LAST:event_RemoverActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        if(lista2.isEmpty()){
            JOptionPane.showMessageDialog(null, "Lista vazia");
        }else{    
            procura = JOptionPane.showInputDialog("Pequise um elemento.");
            if(!isNumber(procura) ) {
                JOptionPane.showMessageDialog(null, "Numero inválido");
            }
            boolean teste = pesquisa();
            if(teste == true){
                   JOptionPane.showMessageDialog(null, "Número encontrado: " + pegaNum + "  na posição: " + lista2.indexOf(pegaNum));
            }
            if(teste == false){
                   JOptionPane.showMessageDialog(null, "Numero não encontrado");
            }
        }
    }//GEN-LAST:event_FindActionPerformed

    private void buscaIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaIndexActionPerformed
        
        if(lista2.isEmpty()){
            JOptionPane.showMessageDialog(null, "Lista vazia");
        }else{
            busca_indice = JOptionPane.showInputDialog("Digite um indice. ");
            if(!isNumber(busca_indice) ) {
                JOptionPane.showMessageDialog(null, "Numero inválido");
            }
            //verificar se a lista eh vazia

            boolean teste = pesquisaIndice();

            if(teste == true){
                   JOptionPane.showMessageDialog(null, "Na posição " + busca_indice + " existe o elemento: " + numero_bscind);
            }
            if(teste == false){
                   JOptionPane.showMessageDialog(null, "Indice não alocado");
            }
        }
    }//GEN-LAST:event_buscaIndexActionPerformed
        
  
        
    
    public boolean pesquisa(){
        int elemento = Integer.parseInt(procura);
        
        for(int j = 0; j < lista2.size(); j++) {
                
            if(lista2.get(j) == elemento){
                    pegaNum = lista2.get(j);
                return true;
            }
        } 
        return false;
    }
     private void removerIndice(int i) {
        lista.get(i).setVisible(false);
        lista.remove(i);
        
        //Esse eh um algoritmo pra reorganizar a lista
        for(int j = 0; j < lista.size(); j++) {
            
            lista.get(j).setBounds(posInicial + (70 * j), 50, 70, 70);
            
        }
        
    }
     
      public boolean pesquisaIndice(){
        int indice = Integer.parseInt(busca_indice);
        for(int j = 0; j < lista3.size(); j++) {
                
            if(lista3.get(j) == indice){
                numero_bscind = lista2.get(indice);
               
                return true;
            }
        } 
        return false;
    }
    
    private void adicionaIndice(int i){
        lista.get(i).setVisible(true);
        lista.remove(i);
        //lista.add(e)
        
        //Esse eh um algoritmo pra reorganizar a lista
        for(int j = 0; j < lista.size(); j++) {
                
            lista.get(j).setBounds(posInicial + (70 * j), 50, 70, 70);
           
        }
    }
    
    
    
    private boolean isNumber(String campo){           
            return campo.matches("[0-9]+");   
    }
    
     private void adicionaLabelFinal(){
         
        JLabel l = new JLabel("" + n_insere);
        l.setBounds(20 + (70*Integer.parseInt(posicao_insere)), 50, 70, 70);
        l.setBorder(BorderFactory.createLineBorder(Color.black));
        l.setFont(new Font("Trebuchet MS", Font.PLAIN, 15));
        l.setForeground(Color.BLACK);
        l.setHorizontalAlignment(SwingConstants.CENTER);
        l.setBackground(Color.GRAY);
        l.setOpaque(true);
        lista.add(l);
        getContentPane().add(l);
        initComponents();
     }
     private void adicionaLabel(){
        JLabel l = new JLabel();
        l.setBounds(20 + (70*lista.size()), 50, 70, 70);
        l.setBorder(BorderFactory.createLineBorder(Color.black));
        l.setFont(new Font("Trebuchet MS", Font.PLAIN, 15));
        l.setForeground(Color.BLACK);
        l.setHorizontalAlignment(SwingConstants.CENTER);
        l.setBackground(Color.GRAY);
        l.setOpaque(true);
        lista.add(l);
        for(int i = lista.size()-1; i > Integer.parseInt(posicao_insere); i--){
            String nAnterior = lista.get(i-1).getText();
            lista.get(i).setText(nAnterior);
        }
        lista.get(Integer.parseInt(posicao_insere)).setText(n_insere);
        
        getContentPane().add(l);
        initComponents();
     }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LSE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LSE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LSE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LSE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LSE().setVisible(true);
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Find;
    private javax.swing.JMenuItem Inserir1;
    private javax.swing.JMenuItem JanelaPrincipal1;
    private javax.swing.JMenuItem Reiniciar;
    private javax.swing.JMenuItem Remover;
    private javax.swing.JMenuItem buscaIndex;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
